include: "rules/common.smk"
include: "rules/convert.smk"
include: "rules/derep.smk"
include: "rules/swarm.smk"


(SAMPLES,) = glob_wildcards("reads/final/{sample}.fastq")


rule all:
    input:
        "data/swarm_stats_without_singletons.tsv",
        "data/swarm_cluster_representatives_without_singletons.fna",
        "data/swarm_metrics.tsv",
        "data/swarm_expected_errors.tsv",
        "data/swarm_cluster_members.tsv",


rule stats:
    input:
        expand("reads/final/{sample}.swarm_stats_pretty.tsv", sample=SAMPLES),
    output:
        "data/swarm_stats.tsv",
    shell:
        """
        qsv cat rowskey --group fstem --group-name sample --output {output} {input}
        sed -i "s/\\.swarm_stats_pretty//" {output}
        """


rule swarm_stats_without_singletons:
    input:
        "data/swarm_stats.tsv",
    output:
        "data/swarm_stats_without_singletons.tsv",
    shell:
        """
        qsv search --invert-match --select count "^1$" --output {output} {input}
        """


rule swarm_stats_without_singletons_ids:
    input:
        "data/swarm_stats_without_singletons.tsv",
    output:
        temp("data/swarm_non_singletons.tsv"),
    shell:
        """
        qsv select feature {input} | qsv sort --unique | qsv behead --output {output}
        """


rule representatives:
    input:
        expand("reads/final/{sample}.cluster_representatives.fna", sample=SAMPLES),
    output:
        "data/swarm_cluster_representatives.fna",
    shell:
        "seqkit rmdup --quiet --by-seq {input}"
        " | seqkit replace --pattern ';.+' --replacement ''"
        " | seqkit sort --quiet --line-width 0"
        " > {output}"


rule swarm_cluster_representatives_without_singletons:
    input:
        fasta="data/swarm_cluster_representatives.fna",
        ids="data/swarm_non_singletons.tsv",
    output:
        fasta="data/swarm_cluster_representatives_without_singletons.fna",
        index=temp("data/swarm_cluster_representatives.fna.fai"),
    shell:
        "seqkit faidx --quiet --line-width 0 --infile-list {input.ids} {input.fasta} > {output.fasta}"


rule metrics:
    input:
        "data/swarm_stats.tsv",
    output:
        "data/swarm_metrics.tsv",
    shell:
        """
        R --slave -e '
            readr::read_tsv("{input}", show_col_types = FALSE) |>
            dplyr::group_by(sample) |>
            dplyr::summarise(count = sum(count)) |>
            tibble::add_column(
                tool = "swarm/JMF-flavor",
                phase = "with singletons",
                .before = 1L
            ) |>
            readr::write_tsv("{output}")
        '
        """


rule expected_errors:
    input:
        expand("reads/final/{sample}.fna", sample=SAMPLES),
    output:
        "data/swarm_expected_errors.tsv",
    shell:
        """
        echo "sha1\tsample\texpected_errors\tlength" > {output}
        cat {input} | grep '^>' | tr ';' '\\t' | sed -e 's/^>//' -e 's/[a-z]\\+=//g' >> {output}
        """


rule cluster_members:
    input:
        expand("reads/final/{sample}.clusters.txt", sample=SAMPLES),
    output:
        "data/swarm_cluster_members.tsv",
    shell:
        """
        echo "sample\tseed\tmembers" > {output}
        awk 'BEGIN {{ OFS="\\t" }} {{ print FILENAME , $0 }}' {input} >> {output}
        sed -i \
            -e "s/^reads\\/final\\///" \
            -e "s/\\.clusters\\.txt//" \
            -e "s/;size=[0-9]\\+\\( \\|$\\)/\\t/" \
            -e "s/;size=[0-9]\\+//g" \
            {output}
        """
